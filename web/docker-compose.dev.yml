version: "3.7"

services:
    frontend:
        image: deesus/product-similarity-frontend:dev
        container_name: frontend
        build:
            context: ./
            dockerfile: frontend/Dockerfile.dev
        # N.b if you change the ports, remember to update CORS in `routes.py`:
        ports:
            - "127.0.0.1:3000:3000"
        environment:
            - HOST=0.0.0.0
            - PORT=3000
        command: npm run dev
        volumes:
            - /app/node_modules
            - ./frontend:/app
        restart: on-failure
        networks:
            - similarity-net

    backend:
        image: deesus/product-similarity-backend:dev
        container_name: backend
        build:
            context: ./
            dockerfile: backend/Dockerfile.dev
        ports:
            - "127.0.0.1:5000:5000"
        environment:
            - FLASK_APP=flask_server.py
            - FLASK_ENV=development
        command: flask run -h 0.0.0.0 -p 5000
        volumes:
            - ./backend:/app/backend
            - ./flask_server.py:/app/flask_server.py
        restart: on-failure
        networks:
            - similarity-net

    model_server:
        image: tensorflow/serving:2.9.0
        container_name: model_server
        ports:
            - "127.0.0.1:8500:8500"   # gRPC
            - "127.0.0.1:8501:8501"   # REST
        # See <https://www.tensorflow.org/tfx/serving/serving_config> and <https://stackoverflow.com/a/56590829>:
        command: --model_config_file=/models/models.config
        # Although not mentioned in TF docs, we need to specify volumes in order to use the `--model_config_file` arg,
        # and therefore, be able to use TensorFlow Serving with Docker Compose. Both the config file and the saved-model
        # location need to be declared:
        volumes:
            - ./model_server/models/models.config:/models/models.config
            - ./model_server/models/resnet_similarity/:/models/resnet_similarity
        restart: on-failure
        networks:
            - similarity-net

networks:
    similarity-net:
        driver: bridge
